[{"name": "test.test_triple_square.TripleSquare.test_calls", "status": "failed", "message": "Regex didn't match: 'triple\\\\((\\\\d+)\\\\)==(\\\\d+) square\\\\((\\\\d+)\\\\)==(\\\\d+)' not found in 'triple(1) == 3 square(1) == 1' : The output line was not in correct format!", "passed": false, "points": ["p01-06.1"], "backtrace": ["  File \"C:\\Users\\danko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Users\\danko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Users\\danko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Users\\danko\\Downloads\\Opgaver_dag1\\Opgaver_dag1\\e06_triple_square\\test\\test_triple_square.py\", line 62, in test_calls\n    self.content_helper([3, 10])\n", "  File \"C:\\Users\\danko\\Downloads\\Opgaver_dag1\\Opgaver_dag1\\e06_triple_square\\test\\test_triple_square.py\", line 27, in content_helper\n    self.assertRegex(line, pattern, msg=\"The output line was not in correct format!\")\n"]}, {"name": "test.test_triple_square.TripleSquare.test_calls2", "status": "failed", "message": "Regex didn't match: 'triple\\\\((\\\\d+)\\\\)==(\\\\d+) square\\\\((\\\\d+)\\\\)==(\\\\d+)' not found in 'triple(1) == 3 square(1) == 1' : The output line was not in correct format!", "passed": false, "points": ["p01-06.2"], "backtrace": ["  File \"C:\\Users\\danko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\case.py\", line 57, in testPartExecutor\n    yield\n", "  File \"C:\\Users\\danko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\case.py\", line 623, in run\n    self._callTestMethod(testMethod)\n", "  File \"C:\\Users\\danko\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\unittest\\case.py\", line 579, in _callTestMethod\n    if method() is not None:\n       ^^^^^^^^\n", "  File \"C:\\Users\\danko\\Downloads\\Opgaver_dag1\\Opgaver_dag1\\e06_triple_square\\test\\test_triple_square.py\", line 67, in test_calls2\n    self.content_helper([3])\n", "  File \"C:\\Users\\danko\\Downloads\\Opgaver_dag1\\Opgaver_dag1\\e06_triple_square\\test\\test_triple_square.py\", line 27, in content_helper\n    self.assertRegex(line, pattern, msg=\"The output line was not in correct format!\")\n"]}, {"name": "test.test_triple_square.TripleSquare.test_square_output_and_type", "status": "passed", "message": "", "passed": true, "points": ["p01-06.1"], "backtrace": []}, {"name": "test.test_triple_square.TripleSquare.test_tiple_output_and_type", "status": "passed", "message": "", "passed": true, "points": ["p01-06.1"], "backtrace": []}]